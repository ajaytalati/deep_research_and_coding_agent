# prompts_v6.yaml
# v6.1: Corrected. Restored detailed node-level prompts from v5 to fix degradation.
# v6.2: Strengthened the create_coding_plan_prompt with a strict schema to prevent JSON errors.

# --- High-Level Task Definitions ---
research_generation_task: >
  # This task is now focused on the next evolution after the Coding Agent.
  **Primary Goal:** Produce a formal technical research report proposing an architecture for a **Master Project Manager (PM) Agent**.

  **Methodology:**
  1.  **Analyze Existing System:** Synthesize the current V5 architecture, which includes a complete Research -> Design -> Coding agent pipeline, communicating via structured JSON artifacts.
  2.  **Research Autonomous Agents:** Based on the knowledge base, research the concepts of executive function, meta-cognition, and autonomous goal-setting in agentic systems.
  3.  **Propose PM Agent Architecture:** Propose a high-level architecture for a Master PM Agent that can:
      - Observe the outputs of the full pipeline (reports, specs, code, test results).
      - Reason about the project's state.
      - Autonomously generate the next `research_generation_task` to continue the development loop without human intervention.

# --- Node-Level Prompts ---

# --- Prompts for Planning, Synthesis, Evaluation (Unchanged) ---
create_plan_prompt: >
  Analyze the user's high-level request and the provided context. Your task is to create a structured **table of contents** for the requested artifact, formatted as a JSON object.
  **Instruction:** The plan you create should be a skeleton or outline for the **final document itself**, NOT a list of your internal process steps.
  **CRITICAL:** Your entire output MUST be a single, valid JSON object that conforms to the schema below. Do not include any other text, comments, or markdown formatting.
  JSON Schema:
  {{
    "title": "<A concise title for the proposed artifact>",
    "plan_items": [
      {{"section_id": "<e.g., 1.0>", "title": "<Title of the first section>", "description": "<A one-sentence description of what this section will cover.>"}}
    ]
  }}
  ### CONTEXT FROM KNOWLEDGE BASE:
  {context}
  ### USER REQUEST:
  {user_prompt}

synthesis_step_prompt: >
  Your task is to generate the content for ONLY the following single item from the overall plan. Use the full plan, user request, and the provided context to ensure your output is relevant and grounded.
  **CRITICAL:** For every substantial claim or piece of data you synthesize from the context, you MUST include an in-line citation tag in the format `[Source: <document_name>]`.
  ### CONTEXT FROM KNOWLEDGE BASE:
  {context}
  ### FULL PLAN:
  {plan_str}
  ### CURRENT PLAN ITEM TO EXECUTE:
  {item_title} - {item_description}
  ### GENERATED CONTENT (Markdown with citations):

create_a2a_synthesis_prompt: >
  You are a metadata and systems analysis expert. Your task is to read the following final research report and distill its core conceptual and architectural information into a structured JSON object.
  **CRITICAL:** Your entire output MUST be a single, valid JSON object that conforms to the schema below. Do not add any other text or markdown.
  JSON Schema:
  {{
    "metadata": {{"report_version": "<The version of the system being described, e.g., 20.0>", "generation_date": "{current_date}", "primary_sources": ["<List of key source documents mentioned in the report>"]}},
    "high_level_summary": "<A one-sentence summary of the system's final architecture>",
    "key_architectural_principles": ["<A list of the core design principles>"],
    "system_components": [{{"name": "<Component Name>", "description": "<A one-sentence description>"}}],
    "workflow_stages": ["<A list of the main workflow phases>"],
    "state_management": {{"definition": "<The name of the state object>", "keys": ["<A list of the most important keys>"]}},
    "required_tools": [{{"name": "<Tool Name>", "description": "<A one-sentence description>"}}]
  }}
  ### FINAL RESEARCH REPORT TO ANALYZE:
  {final_report_text}

create_design_spec_prompt: >
  You are an expert Systems Architect. Your task is to create a formal Technical Design Specification (TDS) based on the conceptual information provided in the research synthesis JSON below.
  **Methodology:** Analyze the `high_level_summary`, `key_architectural_principles`, and `system_components` to understand the goal. Translate these concepts into a concrete implementation plan. The output must be a well-structured Markdown document with clear sections for any required changes to state management, computational graphs, prompts, and the supervisor UI.
  **CRITICAL:** Your output must be a Markdown document.
  ### RESEARCH SYNTHESIS (JSON):
  ```json
  {research_synthesis_json}
  ```
  ### TECHNICAL DESIGN SPECIFICATION (Markdown):

create_design_synthesis_prompt: >
  You are an expert software architect. Your task is to read the following Technical Design Specification and distill its implementation plan into a structured JSON "work order" for a Coding Agent.
  **CRITICAL:** Your entire output MUST be a single, valid JSON object that conforms to the schema below. Do not add any other text or markdown.
  JSON Schema:
  {{
    "metadata": {{"design_spec_version": "<Version of the design spec>", "generation_date": "{current_date}"}},
    "high_level_goal": "<A one-sentence summary of the feature to be implemented.>",
    "file_modifications": [
      {{
        "file_path": "<Relative path to the file to be modified>",
        "changes": ["<Use keywords ADD_CLASS, ADD_FUNCTION, ADD_KEY, MODIFY_CLASS, MODIFY_FUNCTION, or DELETE_FUNCTION followed by a brief, precise description of the change.>"]
      }}
    ],
    "new_files": [
      {{
        "file_path": "<Relative path of the new file to create>",
        "description": "<A brief description of the new file's purpose.>"
      }}
    ]
  }}
  ### TECHNICAL DESIGN SPECIFICATION TO ANALYZE:
  {design_spec_md}

evaluation_prompt_v2: >
  You are an independent auditor. Your task is to evaluate the student's report based on three criteria: logical consistency, goal alignment, and the factual accuracy of its citations.
  **PROCESS:**
  1. Read the student's report below.
  2. For every citation tag `[Source: <doc_name>][#]` you find, you MUST use the `citation_retriever` tool to fetch the content of `<doc_name>`.
  3. Compare the claim in the report with the text returned by the tool to verify its accuracy.
  4. After using all necessary tools, synthesize your findings into a single, final JSON object that strictly conforms to the required schema.
  **CRITICAL:** Your entire output MUST be a single, valid JSON object. Do not add any text before or after the JSON.
  JSON Schema:
  {{
    "overall_consistency_score": <float>,
    "consistency_notes": "<notes>",
    "goal_alignment_check": "<'PASS' or 'FAIL'>",
    "goal_alignment_notes": "<notes>",
    "citation_audit": [
      {{"claim": "<claim>", "citation_tag": "<tag>", "verification_status": "<'PASS' or 'FAIL'>"}}
    ]
  }}
  ### ORIGINAL USER REQUEST:
  {user_prompt}
  ### STUDENT'S REPORT TO EVALUATE:
  {output}

# --- Prompts for the Coding Agent (TDS 5.1 / 6.0) ---
create_coding_plan_prompt: >
  You are an expert software engineer. Your task is to create a step-by-step coding plan based on the JSON work order below. For each file modification, break it down into the precise tool calls needed (`read_file`, `write_file`).
  
  **CRITICAL INSTRUCTIONS:**
  1.  Your entire output MUST be a single, valid JSON object.
  2.  The JSON object must strictly adhere to the schema provided below.
  3.  **DO NOT** add any comments (like // or #) inside the JSON structure.
  4.  Ensure all strings are properly escaped within the JSON.

  ### CODING WORK ORDER (JSON):
  ```json
  {design_synthesis_json}
  ```

  ### YOUR CODING PLAN (JSON):
  ```json
  {{
    "steps": [
      {{
        "description": "A summary of the action, e.g., 'Add new key to GraphState in agent_core_v6.py'",
        "tool": "read_file",
        "args": {{
          "file_path": "src/agent_core_v6.py"
        }}
      }},
      {{
        "description": "Modify the file content with the new key.",
        "tool": "write_file",
        "args": {{
          "file_path": "src/agent_core_v6.py",
          "content": "<The new, complete content of the file>"
        }}
      }}
    ]
  }}
  
